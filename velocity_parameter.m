function [ segment, distance, t] = velocity_parameter(segment,i)%在segment中取数据dx = segment(i+1,1)-segment(i,1);dy = segment(i+1,2)-segment(i,2);k = dy/dx;Len = sqrt(dx^2+dy^2);t0=0;ts = 1/30;% 获取初速度if i==1    vx=0.1;    V = sqrt(k^2+1)*vx;else    V = segment(i-1,11);endvx = V/sqrt(k^2+1);vy = k*vx;v = [vx vy]';A = segment(1,12);%计算加速数据ax = A/sqrt(k^2+1);ay = k*ax;A = sqrt(ax^2+ay^2);%加速if segment(i,15)== 1    %加速向量    acc = [ax ay]';        %计算时间    t1 = sqrt(  (V/A)^2+2*(Len/A)  ) - (V/A);        % 单条线段运动    t = (t0) : (ts) : (t1);    distance = v*t+(acc*t.^2)/2;        %保存合速度    vx = vx +ax*t1;    vy = k * vx;    V = sqrt(vx^2+vy^2);    % 匀速% elseif segment(i,15)== 0%     fprintf('匀速');% 减速elseif segment(i,15)== -1    %减速向量    A = 0.5*A;    ax = A/sqrt(k^2+1);    ay = k*ax;    A = sqrt(ax^2+ay^2);    acc = [ax ay]';        %计算时间    t1 = -sqrt(  (V/A)^2-2*(Len/A)  ) + (V/A);        % 单条线段运动    t = (t0) : (ts) : (t1);    distance = v*t-(acc*t.^2)/2;        %保存合速度    vx = vx -ax*t1;    vy = k * vx;    V = sqrt(vx^2+vy^2);% 较大减速elseif segment(i,15)== -2    %较大减速向量    acc = [ax ay]';        %计算时间    t1 = -sqrt(  (V/A)^2-2*(Len/A)  ) + (V/A);        % 单条线段运动    t = (t0) : (ts) : (t1);    distance = v*t-(acc*t.^2)/2;        %保存合速度    vx = vx -ax*t1;    vy = k * vx;    V = sqrt(vx^2+vy^2);end% 调整运动方向if (dx<0)&&(dy<0)    distance(1,:) = -distance(1,:);    distance(2,:) = -distance(2,:);elseif (dx<0)&&(dy==0)    distance(1,:) = -distance(1,:);end%在segment中存数据segment(i,3)=dx;segment(i,4)=dy;segment(i,5)=k;segment(i,6)=Len;segment(i,8)=distance(end);segment(i,9)=vx;segment(i,10)=vy;segment(i,11)=V;segment(i,12)=A;segment(i,13)=ax;segment(i,14)=ay;segment(i,16)=ts;segment(i,17)=t1;end